name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read # to fetch code (actions/checkout)

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-unices:
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.8", "3.12"]
        shell: ['bash', 'zsh', 'csh', 'tcsh', 'ksh', 'fish']
        os: [ubuntu-latest, macos-latest]
        exclude:
          # No formula for csh on Homebrew
          - os: macos-latest
            shell: csh
    runs-on: ${{ matrix.os }}
    env:
      TEST_USER: mb110
      GH_WF: ".github/workflows"
      SHELL_NAME: ${{ matrix.shell }}
    steps:
      - name: Install shell
        run : |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update
            sudo apt install -y ${{ matrix.shell }}
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install ${{ matrix.shell }}
          fi
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          allow-prereleases: true
      - name: Clean XDG_CONFIG_HOME
        # fish depends on this variable being empty or correctly set.
        run: |
          sed 's/^XDG_CONFIG_HOME.*$//' /etc/environment > clean_environment
          sudo mv clean_environment /etc/environment
        if: runner.os == 'Linux'
      - name: Set users Python
        # This only set to Python above for runner user by default.
        run: |
          ln -s $(which python3) /usr/local/bin/python3
          ln -s $(which python) /usr/local/bin/python
        if: runner.os == 'Linux'
      - name: Test mac sudo
        run: |
          sudo whoami
        if: runner.os == 'macOS'
      - name: Make user
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo useradd -m $TEST_USER
            # Inconvenient short-circuit for interactive shells on Debian.
            sudo rm /home/$TEST_USER/.bashrc
            # Fix zsh initalization.
            sudo chmod 755 /usr/share/zsh
            sudo chmod 755 /usr/share/zsh/vendor-completions
          elif [ "$RUNNER_OS" == "macOS" ]; then
            sudo $GH_WF/make_mac_user.sh $TEST_USER 600
            # Allow ssh access.
            sudo /usr/sbin/dseditgroup -o edit -a ${TEST_USER} -t user com.apple.access_ssh
            # Configure for homebrew
            echo "export PATH=\"\$PATH:$(brew --prefix)/bin\"" > /tmp/bash_profile
            sudo -i -u $TEST_USER cp /tmp/bash_profile .bash_profile
          fi
      - name: Set shell
        run: |
          sudo chsh -s $(which ${{ matrix.shell }}) $TEST_USER
      - name: Install puser
        uses: matthew-brett/run-as-user-action@allow-repeat-runs
        with:
          commands: |
            echo $PATH
            python3 -m pip install --user git+https://github.com/${{ github.repository }}
            python3 -m puser
          user: $TEST_USER
          shell: ${{ matrix.shell }}
      - name: Test puser
        uses: matthew-brett/run-as-user-action@allow-repeat-runs
        with:
          commands: |
            echo $PATH
            puser-config
          user: $TEST_USER
          shell: ${{ matrix.shell }}
      # Uncomment to get SSH access for testing
      # - name: Setup tmate session
      #   if: failure()
      #   uses: mxschmitt/action-tmate@v3

  test-windows:
    strategy:
      matrix:
        python_version: ["3.8", "3.12"]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          allow-prereleases: true
      - name: Install
        run: |
          pip install ".[test]"
      - name: Test set configuration
        run: |
          env
          python -m puser
      - name: Show environment
        run: env
      - name: Test user script
        run: puser-config
